##Template de uso geral do metodo set
##
#set( $ATTRIBUTE_TYPE_STRING = "4" )
#set( $ATTRIBUTE_TYPE_DATE = "5" )
#set( $ATTRIBUTE_TYPE_INTEGER = "6" )
#set( $directive.foreach.counter.initial.value = 0 )
##
	
	
	public void create( CargaConsultaDto[] cargasConsultas ) {
		String methodName = "create";
		debugInicioDoMetodo( methodName );
		
		CargaConsultaDto cargaConsulta = null;
		PreparedStatement pstm = null;
		String sql = null;
		int parameterIndex = 1;
		
		try {
			sql = sqlServiceLocator.getSql( "create" );
			
			if ( DEBUG ) {
				debug( methodName, "sql", sql );
				debug( methodName, "cargasConsultas", cargasConsultas );
				
				if ( cargasConsultas != null ) {
					debug( methodName, "cargasConsultas.length", 
							cargasConsultas.length );
				}
			}
			
			pstm = buildPreparedStatement( sql );
			
			for ( int i = 0; i < cargasConsultas.length; i++ ) {
				cargaConsulta = cargasConsultas[i];
				Integer numDemanda = cargaConsulta.getNumDemanda();
				parameterIndex = 1;
				
				if ( numDemanda != null ) {
					pstm.setInt( parameterIndex++, numDemanda.intValue() );
				} else {
					pstm.setNull( parameterIndex++, java.sql.Types.INTEGER );
				}
				
				String codStatusConsulta = cargaConsulta.getCodStatusConsulta();
				
				if ( codStatusConsulta != null ) {
					pstm.setString( parameterIndex++, codStatusConsulta );
				} else {
					pstm.setNull( parameterIndex++, Types.CHAR );
				}
				
				String nomResposta = cargaConsulta.getNomResposta();
				
				if ( nomResposta != null ) {
					pstm.setString( parameterIndex++, nomResposta );
				} else {
					pstm.setNull( parameterIndex++, Types.CHAR );
				}
				
				Date dataCriacao = cargaConsulta.getDataCriacao();

				if ( dataCriacao != null ) {
					pstm.setDate( parameterIndex++, new java.sql.Date( dataCriacao.getTime() ));
				} else {
					pstm.setNull( parameterIndex++, java.sql.Types.DATE );
				}
				
				Date dataResposta = cargaConsulta.getDataResposta();
				
				if ( dataResposta != null ) {
					pstm.setDate( parameterIndex++, new java.sql.Date( dataResposta.getTime() ));
				} else {
					pstm.setNull( parameterIndex++, java.sql.Types.DATE );
				}
				
				int nrAtualizacoes = pstm.executeUpdate();
				
				if ( DEBUG ) {
					debug( methodName, "nrAtualiacoes", nrAtualizacoes );
					debug( methodName, "cargaConsulta.getNumDemanda()", 
							cargaConsulta.getNumDemanda() );
				}
			}
		} catch ( ClassNotFoundException e ) {
			String message = "Verificar se a fonte de dados Microsoft Access ODBC esta corretamente configurada.";
			warn( methodName, message );
			error( methodName, e );
		} catch ( SQLException e ) {
			debug( methodName, "sql", sql );
			debug( methodName, "e.getSQLState()", e.getSQLState() );
			debug( methodName, "parameterIndex", parameterIndex );
			error( methodName, e );
		} catch ( Exception e ) {
			error( methodName, e );
		} finally {
			close( pstm );
		}
	}
	
	
	public static ${javaDtoClassName} build( String[] tokens ) {
		String methodName = "build";
		${javaDtoClassName} ${javaDtoAttributeName} = new ${javaDtoClassName}();
		DateFormat df = new SimpleDateFormat( "yyyy-MM-dd HH:mm:ss" );
		
		try {
			int index = 0;
#foreach( $metaAttribute in $metaAttributes )
			String ${metaAttribute.getNameAttributeStyle()}S = tokens[index++];
			
			if ( ${metaAttribute.getNameAttributeStyle()}S != null ) {
				${metaAttribute.getNameAttributeStyle()}S = ${metaAttribute.getNameAttributeStyle()}S.trim();
				
				if ( ${metaAttribute.getNameAttributeStyle()}S.length() > 0 ) {
#if ( $metaAttribute.getAttributeType() == $ATTRIBUTE_TYPE_DATE ) 
					try {
						Date ${metaAttribute.getNameAttributeStyle()} = df.parse( ${metaAttribute.getNameAttributeStyle()}S );
						${javaDtoAttributeName}.set$metaAttribute.getNameClassStyle()( ${metaAttribute.getNameAttributeStyle()} );
					} catch ( ParseException e ) {
						warn( CLASS_NAME, methodName, e.getMessage() );
						debug( CLASS_NAME, methodName, "${metaAttribute.getNameAttributeStyle()}S", 
								${metaAttribute.getNameAttributeStyle()}S );
					}
#elseif ( $metaAttribute.getAttributeType() == $ATTRIBUTE_TYPE_INTEGER )
					try {
						Integer $metaAttribute.getNameAttributeStyle() = Integer.valueOf( ${metaAttribute.getNameAttributeStyle()}S );
						${javaDtoAttributeName}.set${metaAttribute.getNameClassStyle()}( ${metaAttribute.getNameAttributeStyle()} );
					} catch ( NumberFormatException e ) {
						warn( CLASS_NAME, methodName, e.getMessage() );
						debug( CLASS_NAME, methodName, "${metaAttribute.getNameAttributeStyle()}S", 
								${metaAttribute.getNameAttributeStyle()}S );
					}
#elseif ( $metaAttribute.getAttributeType() == $ATTRIBUTE_TYPE_STRING )
					${javaDtoAttributeName}.set${metaAttribute.getNameClassStyle()}( ${metaAttribute.getNameAttributeStyle()}S );
#else
					// $metaAttribute.getTypeName() ${metaAttribute.getNameAttributeStyle()} = parse( ${metaAttribute.getNameAttributeStyle()}S );
					// ${javaDtoAttributeName}.set${metaAttribute.getNameClassStyle()}( ${metaAttribute.getNameAttributeStyle()} );
#end ##bloco if
				}
			}
			
#end ## bloco foreach
		} catch ( NumberFormatException e ) {
			warn( CLASS_NAME, methodName, e.getMessage() );
			debug( CLASS_NAME, methodName, ", Ocorreu um erro de parse, tokens.length: " + 
					tokens.length );
		} catch ( Exception e ) {
			warn( CLASS_NAME, methodName, e.getMessage() );
			debug( CLASS_NAME, methodName, ", tokens.length: " + tokens.length );
		}
		
		return ${javaDtoAttributeName};
	}
##
##Template de uso geral do metodo set
##
#set( $ATTRIBUTE_TYPE_STRING = "4" )
#set( $ATTRIBUTE_TYPE_DATE = "5" )
#set( $ATTRIBUTE_TYPE_INTEGER = "6" )
#set( $ATTRIBUTE_TYPE_FLOAT_WRAPPER = "7" )

#set( $directive.foreach.counter.initial.value = 0 )
##
	
	
	public void create( ${java_entity.getNameClassStyle()}Dto[] ${java_entity.getNameAttributeStyle()}Array ) {
		String methodName = "create";
		debugInicioDoMetodo( methodName );
		
		${java_entity.getNameClassStyle()}Dto ${java_entity.getNameAttributeStyle()} = null;
		PreparedStatement pstm = null;
		String sql = null;
		int parameterIndex = 1;
		int nrAtualizacoes = 0;
		
		try {
			sql = sqlServiceLocator.getSql( "create" );
			pstm = buildPreparedStatement( sql );
			
			for ( int i = 0; i < ${java_entity.getNameAttributeStyle()}Array.length; i++ ) {
				${java_entity.getNameAttributeStyle()} = ${java_entity.getNameAttributeStyle()}Array[i];
				parameterIndex = 1;
#foreach( $java_attribute in $java_entity.getJavaAttributes() ) 
#if ( ${java_attribute.getType()} == $ATTRIBUTE_TYPE_DATE ) 
				
				Date ${java_attribute.getNameAttributeStyle()} = ${java_entity.getNameAttributeStyle()}.get${java_attribute.getNameClassStyle()}();
				
				if ( ${java_attribute.getNameAttributeStyle()} != null ) {
					pstm.setDate( parameterIndex++, new java.sql.Date( ${java_attribute.getNameAttributeStyle()}.getTime() ));
				} else {
					pstm.setNull( parameterIndex++, Types.DATE );
				}
#elseif ( ${java_attribute.getType()} == $ATTRIBUTE_TYPE_INTEGER )
#if (!${java_attribute.isIdentity()})
				
				Integer ${java_attribute.getNameAttributeStyle()} = ${java_entity.getNameAttributeStyle()}.get${java_attribute.getNameClassStyle()}();
				
				if ( ${java_attribute.getNameAttributeStyle()} != null ) {
					pstm.setInt( parameterIndex++, ${java_attribute.getNameAttributeStyle()}.intValue() );
				} else {
					pstm.setNull( parameterIndex++, Types.INTEGER );
				}
#end
#elseif ( ${java_attribute.getType()} == $ATTRIBUTE_TYPE_FLOAT_WRAPPER )
#if (!${java_attribute.isIdentity()})
				
				Float ${java_attribute.getNameAttributeStyle()} = ${java_entity.getNameAttributeStyle()}.get${java_attribute.getNameClassStyle()}();
				
				if ( ${java_attribute.getNameAttributeStyle()} != null ) {
					pstm.setFloat( parameterIndex++, ${java_attribute.getNameAttributeStyle()}.floatValue() );
				} else {
					pstm.setNull( parameterIndex++, Types.FLOAT );
				}
#end
#elseif ( ${java_attribute.getType()} == $ATTRIBUTE_TYPE_STRING )
				
				String ${java_attribute.getNameAttributeStyle()} = ${java_entity.getNameAttributeStyle()}.get${java_attribute.getNameClassStyle()}();
				
				if ( ${java_attribute.getNameAttributeStyle()} != null ) {
					pstm.setString( parameterIndex++, ${java_attribute.getNameAttributeStyle()} );
				} else {
					pstm.setNull( parameterIndex++, Types.CHAR );
				}
#else
				
				// $java_attribute.getTypeName() ${java_attribute.getNameAttributeStyle()}
#end ##bloco if
#end ## bloco foreach
				
				nrAtualizacoes += pstm.executeUpdate();
			}
			
			debug( methodName, "nrAtualiacoes", nrAtualizacoes );
		} catch ( ClassNotFoundException e ) {
			String message = "Problemas com o driver JDBC";
			warn( methodName, message );
			error( methodName, e );
		} catch ( SQLException e ) {
			debug( methodName, "sql", sql );
			debug( methodName, "e.getSQLState()", e.getSQLState() );
			debug( methodName, "parameterIndex", parameterIndex );
			debug( methodName, "${java_entity.getNameAttributeStyle()}", ${java_entity.getNameAttributeStyle()} );
			error( methodName, e );
		} catch ( Exception e ) {
			error( methodName, e );
		} finally {
			close( pstm );
		}
	}
##